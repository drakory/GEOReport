name: Build and Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  build_docker_images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -f ./backend/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/georeport_golang ./backend
          docker build -f ./frontend/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/georeport_react ./frontend

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/georeport_golang
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/georeport_react

  deploy_app:
    needs: build_docker_images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Creation .env
        run: |
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      - name: Create temporary SSH key file
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > temp_ssh_key
          chmod 600 temp_ssh_key
      
      - name: Create & Copy necessary files to droplet
        run: |
          scp -i temp_ssh_key -o StrictHostKeyChecking=no docker-compose_server.yml ${{ secrets.USER_LINUX }}@${{ secrets.IP_LINUX }}:${{ secrets.PATH_GEOREPORT }}/docker-compose.yml
          scp -i temp_ssh_key -o StrictHostKeyChecking=no .env ${{ secrets.USER_LINUX }}@${{ secrets.IP_LINUX }}:${{ secrets.PATH_GEOREPORT }}

      - name: Deploy to Remote Server
        run: | 
          ssh -i temp_ssh_key -o StrictHostKeyChecking=no ${{ secrets.USER_LINUX }}@${{ secrets.IP_LINUX }} << 'EOF'
            cd ${{ secrets.PATH_GEOREPORT }}
            docker-compose pull
            docker-compose up -d
          EOF
      - name: Remove temporary SSH key file
        run: |
          rm -f temp_ssh_key