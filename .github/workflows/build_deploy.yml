name: Build and Deploy to AWS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_docker_images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -f ./backend/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/georeport_golang ./backend

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/georeport_golang

  
  deploy_app:
    needs: build_docker_images
    runs-on: ubuntu-latest

    steps:
      - name: Creation .env
        run: |
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      - name: Create temporary SSH key file
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > temp_ssh_key
          chmod 600 temp_ssh_key

      
      - name: Create & Copy necessary files to droplet
        run: |
          scp -i temp_ssh_key -o StrictHostKeyChecking=no docker-compose_server.yml ${{ secrets.USER_LINUX }}@${{ secrets.IP_LINUX }}:${{ secrets.PATH_GEOREPORT }}
          scp -i temp_ssh_key -o StrictHostKeyChecking=no .env ${{ secrets.USER_LINUX }}@${{ secrets.IP_LINUX }}:${{ secrets.PATH_GEOREPORT }}

#      - name: Transfer docker-compose.yml
#        uses: appleboy/scp-action@v0.1.3
#        with:
#          host: ${{ secrets.IP_LINUX }}
#          username: ${{ secrets.USER_LINUX }}
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          source: "docker-compose_server.yml"
#          target: "${{ secrets.PATH_GEOREPORT }}"

#      - name: Transfer .env
#        uses: appleboy/scp-action@v0.1.3
#        with:
#          host: ${{ secrets.IP_LINUX }}
#          username: ${{ secrets.USER_LINUX }}
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          source: ".env"
#          target: "${{ secrets.PATH_GEOREPORT }}/backend"

      - name: Deploy to Remote Server
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.IP_LINUX }}
          username: ${{ secrets.USER_LINUX }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.PATH_GEOREPORT }}
            docker-compose pull
            docker-compose up -d

      - name: Remove temporary SSH key file
        run: |
          rm -f temp_ssh_key

#- name: Deploy Docker containers
#  run: |
#    ssh -o StrictHostKeyChecking=no @ << 'EOF'
#      docker stop go_geo_report || true
#      docker rm go_geo_report || true
#      docker-compose -f /home/${{ secrets.USER_LINUX }}/go_geo_report/docker-compose.yml up -d
#    EOF
#docker pull ${{ secrets.DOCKERHUB_USERNAME }}/go_geo_report:latest
#docker run -d --name go_geo_report -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/go_geo_report:latest